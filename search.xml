<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Mysql存储过程与存储函数</title>
      <link href="2021/01/03/mysql-cun-chu-guo-cheng-yu-cun-chu-han-shu/"/>
      <url>2021/01/03/mysql-cun-chu-guo-cheng-yu-cun-chu-han-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="了解"><a href="#了解" class="headerlink" title="了解"></a>了解</h2><p>​    存储过程时数据库的一个重要的对象，可以封装SQL语句集，可以用来完成一些较复杂的业务逻辑，并且可以入参（传参）、出参（返回参数），这里与Java中封装方式十分相似。</p><p>​    而且创建时会预先编译后保存，开发者后续的调用都不需要再次编译。</p><p>当我们了了解存储过程是什么之后，就需要了解数据库中存在的这三种类型的数据库存储类型程序，如下：</p><ul><li><strong>存储过程：</strong> 存储过程是最常见的存储程序，存储过程是能够接受输入和输出参数并且能够在请求时被执行的程序单元。</li><li><strong>存储函数：</strong> 存储函数和存储过程很相像，但是它的执行结果会返回一个值。最重要的是存储函数可以被用来充当标准的 SQL 语句，允许程序员有效的扩展 SQL 语言的能力。</li><li><strong>触发器：</strong> 触发器是用来响应激活或者触发数据库行为事件的存储程序。通常，触发器用来作为数据库操作语言的响应而被调用，触发器可以被用来作为数据校验和自动反向格式化。</li></ul><p>注意： 其他的数据库提供了别的数据存储程序，包括包和类。目前MySQL不提供这种结构。</p><p>​    <strong>讲了很多存储程序的优势演变过程，其核心就是：</strong> 需要将编译好的一段或多段SQL语句放置在数据库端的存储程序中，以便解决以上问题并方便开发者直接调用</p><hr><h2 id="存储过程的变量和赋值"><a href="#存储过程的变量和赋值" class="headerlink" title="存储过程的变量和赋值"></a>存储过程的变量和赋值</h2><h3 id="核心："><a href="#核心：" class="headerlink" title="核心："></a>核心：</h3><p>​    <strong>变量分类</strong>：局部变量、用户变量、会话变量、全局变量</p><p>​    <strong>入参出参</strong></p><h3 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h3><pre class="line-numbers language-sql"><code class="language-sql">声明局部变量语法： <span class="token keyword">declare</span> var_name <span class="token keyword">type</span> <span class="token punctuation">[</span><span class="token keyword">default</span> var_value<span class="token punctuation">]</span><span class="token punctuation">;</span>如：<span class="token keyword">declare</span> val_name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">'unknown'</span><span class="token punctuation">;</span>赋值语法：<span class="token keyword">set</span> val_name <span class="token operator">=</span> <span class="token string">"known"</span><span class="token punctuation">;</span>注意： 局部变量的定义，在<span class="token keyword">begin</span><span class="token operator">/</span><span class="token keyword">end</span>块中有效。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="用户变量"><a href="#用户变量" class="headerlink" title="用户变量"></a>用户变量</h3><pre class="line-numbers language-sql"><code class="language-sql">用户自定义用户变量，当前会话（连接）有效。与Java中的成员变量相似。语法： <span class="token variable">@val_name</span>注意： 该用户变量不需要提前声明，使用即为声明赋值：<span class="token keyword">set</span> <span class="token variable">@val_name</span> <span class="token operator">=</span> <span class="token string">'Lacy'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="会话变量"><a href="#会话变量" class="headerlink" title="会话变量"></a>会话变量</h3><pre class="line-numbers language-sql"><code class="language-sql">会话变量是由系统提供的，只在当前会话（连接）中有效。语法： @<span class="token variable">@session.val_name</span>查看会话变量与赋值：    <span class="token comment" spellcheck="true"># 查看所有会话变量</span>    <span class="token keyword">show</span> <span class="token keyword">session</span> variables<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true"># 查看指定的会话变量</span>    <span class="token keyword">select</span> @<span class="token variable">@session.val_name</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true"># 修改指定的会话变量</span>    <span class="token keyword">set</span> @<span class="token variable">@session.val_name</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h3><pre class="line-numbers language-sql"><code class="language-sql">全局变量由系统提供，整个MySQL服务器内有效。语法： @<span class="token variable">@global.val_name</span>查看系统全局变量与赋值:    <span class="token comment" spellcheck="true"># 查看全局变量中变量名有char的记录</span>    <span class="token keyword">show</span> <span class="token keyword">global</span> variables <span class="token operator">like</span> <span class="token string">'%char%'</span> <span class="token comment" spellcheck="true">//</span>    <span class="token comment" spellcheck="true"># 查看全局变量character_set_client的值</span>    <span class="token keyword">select</span> @<span class="token variable">@global.character_set_client</span> <span class="token comment" spellcheck="true">//</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="入参出参"><a href="#入参出参" class="headerlink" title="入参出参"></a>入参出参</h3><pre class="line-numbers language-sql"><code class="language-sql">语法： <span class="token operator">in</span><span class="token operator">|</span><span class="token keyword">out</span><span class="token operator">|</span><span class="token keyword">inout</span> 参数名 数据类型 <span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">in</span>定义出参；<span class="token keyword">out</span>定义入参；<span class="token keyword">inout</span>定义出参和入参。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>范例</p><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#声明结束 //</span><span class="token keyword">delimiter</span> <span class="token comment" spellcheck="true">//</span><span class="token keyword">drop</span> <span class="token keyword">PROCEDURE</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> val_into <span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">#形参没法设置 default </span><span class="token keyword">create</span> <span class="token keyword">procedure</span> val_into<span class="token punctuation">(</span><span class="token operator">in</span> val_id <span class="token keyword">int</span><span class="token punctuation">,</span><span class="token keyword">out</span> val_CardPhyicalCode <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">inout</span> val_TransCode <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token keyword">begin</span>    <span class="token comment" spellcheck="true"># 如果查询没有数据  into 不会执行  形参为原来默认值null</span>    <span class="token keyword">select</span> TransCode<span class="token punctuation">,</span>CardPhyicalCode <span class="token keyword">into</span> val_TransCode<span class="token punctuation">,</span>val_CardPhyicalCode <span class="token keyword">from</span> t_dat_oneticket_transdetail <span class="token keyword">where</span> id <span class="token operator">=</span> val_id<span class="token punctuation">;</span><span class="token keyword">end</span> <span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true"># id 用户变量 用户变量</span><span class="token keyword">call</span> val_into<span class="token punctuation">(</span><span class="token number">17470</span><span class="token punctuation">,</span><span class="token variable">@val_CardPhyicalCode</span><span class="token punctuation">,</span><span class="token variable">@val_TransCode</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//</span><span class="token keyword">SELECT</span> <span class="token variable">@val_CardPhyicalCode</span><span class="token punctuation">,</span><span class="token variable">@val_TransCode</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="存储过程中的流程控制"><a href="#存储过程中的流程控制" class="headerlink" title="存储过程中的流程控制"></a>存储过程中的流程控制</h2><h4 id="流程控制语句（继续、结束）"><a href="#流程控制语句（继续、结束）" class="headerlink" title="流程控制语句（继续、结束）"></a>流程控制语句（继续、结束）</h4><pre class="line-numbers language-sql"><code class="language-sql">leave 标签<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">--break</span>iterate 标签<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">--continue</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="if条件判断（推荐）"><a href="#if条件判断（推荐）" class="headerlink" title="if条件判断（推荐）"></a>if条件判断（推荐）</h4><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">IF</span> 条件判断 <span class="token keyword">THEN</span> 结果    <span class="token punctuation">[</span>ELSEIF 条件判断 <span class="token keyword">THEN</span> 结果<span class="token punctuation">]</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token punctuation">[</span><span class="token keyword">ELSE</span> 结果<span class="token punctuation">]</span><span class="token keyword">END</span> <span class="token keyword">IF</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h5 id="范例"><a href="#范例" class="headerlink" title="范例"></a>范例</h5><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">delimiter</span> <span class="token comment" spellcheck="true">//</span><span class="token keyword">create</span> <span class="token keyword">procedure</span> s_sql<span class="token punctuation">(</span><span class="token operator">in</span> val_id <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token keyword">begin</span>    <span class="token comment" spellcheck="true"># 声明一个局部变量result存放工资标准结果</span>    <span class="token keyword">declare</span> result <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true"># 声明一个局部变量存放查询得到的工资</span>    <span class="token keyword">declare</span> s <span class="token keyword">double</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true"># 根据入参id查询工资</span>    <span class="token keyword">select</span> salary <span class="token keyword">into</span> s <span class="token keyword">from</span> employee <span class="token keyword">where</span> id <span class="token operator">=</span> val_id<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true"># if判断的使用</span>    <span class="token keyword">if</span> s <span class="token operator">&lt;=</span> <span class="token number">6000</span> <span class="token keyword">then</span>        <span class="token keyword">set</span> result <span class="token operator">=</span> <span class="token string">'低工资标准'</span><span class="token punctuation">;</span>    elseif s <span class="token operator">&lt;=</span> <span class="token number">10000</span> <span class="token keyword">then</span>        <span class="token keyword">set</span> result <span class="token operator">=</span> <span class="token string">'中工资标准'</span><span class="token punctuation">;</span>    elseif s <span class="token operator">&lt;=</span> <span class="token number">15000</span> <span class="token keyword">then</span>        <span class="token keyword">set</span> result <span class="token operator">=</span> <span class="token string">'中上工资标准'</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>        <span class="token keyword">set</span> result <span class="token operator">=</span> <span class="token string">'高工资标准'</span><span class="token punctuation">;</span>    <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true"># 查询工资标准结果</span>    <span class="token keyword">select</span> result<span class="token punctuation">;</span><span class="token keyword">end</span> <span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true"># 调用函数，传入参数</span><span class="token keyword">call</span> s_sql<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="case条件判断"><a href="#case条件判断" class="headerlink" title="case条件判断"></a>case条件判断</h4><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true"># 语法一</span><span class="token keyword">CASE</span> case_value    <span class="token keyword">WHEN</span> when_value <span class="token keyword">THEN</span> 结果    <span class="token punctuation">[</span><span class="token keyword">WHEN</span> when_value <span class="token keyword">THEN</span> 结果<span class="token punctuation">]</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token punctuation">[</span><span class="token keyword">ELSE</span> 结果<span class="token punctuation">]</span><span class="token keyword">END</span> <span class="token keyword">CASE</span><span class="token comment" spellcheck="true"># 语法二(推荐语法)</span><span class="token keyword">CASE</span>    <span class="token keyword">WHEN</span> 条件判断 <span class="token keyword">THEN</span> 结果    <span class="token punctuation">[</span><span class="token keyword">WHEN</span> 条件判断 <span class="token keyword">THEN</span> 结果<span class="token punctuation">]</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token punctuation">[</span><span class="token keyword">ELSE</span> 结果<span class="token punctuation">]</span><span class="token keyword">END</span> <span class="token keyword">CASE</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="范例-1"><a href="#范例-1" class="headerlink" title="范例"></a>范例</h5><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true"># 语法一</span><span class="token keyword">delimiter</span> <span class="token comment" spellcheck="true">//</span><span class="token keyword">create</span> <span class="token keyword">procedure</span> s_case<span class="token punctuation">(</span><span class="token operator">in</span> val_id <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token keyword">begin</span>    <span class="token comment" spellcheck="true"># 声明一个局部变量result存放工资标准结果</span>    <span class="token keyword">declare</span> result <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true"># 声明一个局部变量存放查询得到的工资</span>    <span class="token keyword">declare</span> s <span class="token keyword">double</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true"># 根据入参id查询工资</span>    <span class="token keyword">select</span> salary <span class="token keyword">into</span> s <span class="token keyword">from</span> employee <span class="token keyword">where</span> id <span class="token operator">=</span> val_id<span class="token punctuation">;</span>    <span class="token keyword">case</span> s        <span class="token keyword">when</span> <span class="token number">6000</span> <span class="token keyword">then</span> <span class="token keyword">set</span> result <span class="token operator">=</span> <span class="token string">'低工资标准'</span><span class="token punctuation">;</span>        <span class="token keyword">when</span> <span class="token number">10000</span> <span class="token keyword">then</span> <span class="token keyword">set</span> result <span class="token operator">=</span> <span class="token string">'中工资标准'</span><span class="token punctuation">;</span>        <span class="token keyword">when</span> <span class="token number">15000</span> <span class="token keyword">then</span> <span class="token keyword">set</span> result <span class="token operator">=</span> <span class="token string">'中上工资标准'</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> <span class="token keyword">set</span> result <span class="token operator">=</span> <span class="token string">'高工资标准'</span><span class="token punctuation">;</span>    <span class="token keyword">end</span> <span class="token keyword">case</span><span class="token punctuation">;</span>    <span class="token keyword">select</span> result<span class="token punctuation">;</span><span class="token keyword">end</span> <span class="token comment" spellcheck="true">//</span><span class="token keyword">call</span> s_case<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true"># 语法二(推荐)</span><span class="token keyword">delimiter</span> <span class="token comment" spellcheck="true">//</span><span class="token keyword">create</span> <span class="token keyword">procedure</span> s_case<span class="token punctuation">(</span><span class="token operator">in</span> val_id <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token keyword">begin</span>    <span class="token comment" spellcheck="true"># 声明一个局部变量result存放工资标准结果</span>    <span class="token keyword">declare</span> result <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true"># 声明一个局部变量存放查询得到的工资</span>    <span class="token keyword">declare</span> s <span class="token keyword">double</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true"># 根据入参id查询工资</span>    <span class="token keyword">select</span> salary <span class="token keyword">into</span> s <span class="token keyword">from</span> employee <span class="token keyword">where</span> id <span class="token operator">=</span> val_id<span class="token punctuation">;</span>    <span class="token keyword">case</span>        <span class="token keyword">when</span> s <span class="token operator">&lt;=</span> <span class="token number">6000</span> <span class="token keyword">then</span> <span class="token keyword">set</span> result <span class="token operator">=</span> <span class="token string">'低工资标准'</span><span class="token punctuation">;</span>        <span class="token keyword">when</span> s <span class="token operator">&lt;=</span> <span class="token number">10000</span> <span class="token keyword">then</span> <span class="token keyword">set</span> result <span class="token operator">=</span> <span class="token string">'中工资标准'</span><span class="token punctuation">;</span>        <span class="token keyword">when</span> s <span class="token operator">&lt;=</span> <span class="token number">15000</span> <span class="token keyword">then</span> <span class="token keyword">set</span> result <span class="token operator">=</span> <span class="token string">'中上工资标准'</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> <span class="token keyword">set</span> result <span class="token operator">=</span> <span class="token string">'高工资标准'</span><span class="token punctuation">;</span>    <span class="token keyword">end</span> <span class="token keyword">case</span><span class="token punctuation">;</span>    <span class="token keyword">select</span> result<span class="token punctuation">;</span><span class="token keyword">end</span> <span class="token comment" spellcheck="true">//</span><span class="token keyword">call</span> s_case<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="loop循环"><a href="#loop循环" class="headerlink" title="loop循环"></a>loop循环</h4><pre class="line-numbers language-sql"><code class="language-sql"><span class="token punctuation">[</span>别名:<span class="token punctuation">]</span> LOOP    循环语句<span class="token keyword">END</span> LOOP <span class="token punctuation">[</span>别名<span class="token punctuation">]</span>注意：别名和别名控制的是同一个标签。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="范例-2"><a href="#范例-2" class="headerlink" title="范例"></a>范例</h5><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">delimiter</span> <span class="token comment" spellcheck="true">//</span><span class="token keyword">create</span> <span class="token keyword">procedure</span> s_loop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">begin</span>    <span class="token comment" spellcheck="true"># 声明计数器</span>    <span class="token keyword">declare</span> i <span class="token keyword">int</span> <span class="token keyword">default</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true"># 开始循环</span>    num:    loop        <span class="token comment" spellcheck="true"># 查询计数器记录的值</span>        <span class="token keyword">select</span> i<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true"># 判断大于等于停止计数</span>        <span class="token keyword">if</span> i <span class="token operator">>=</span> <span class="token number">10</span> <span class="token keyword">then</span>            leave num<span class="token punctuation">;</span>        <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true"># 计数器自增1</span>        <span class="token keyword">set</span> i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true"># 结束循环</span>    <span class="token keyword">end</span> loop num<span class="token punctuation">;</span><span class="token keyword">end</span> <span class="token comment" spellcheck="true">//</span><span class="token keyword">call</span> s_loop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="repeat循环"><a href="#repeat循环" class="headerlink" title="repeat循环"></a>repeat循环</h4><pre class="line-numbers language-sql"><code class="language-sql"><span class="token punctuation">[</span>别名:<span class="token punctuation">]</span> REPEAT    循环语句UNTIL 条件<span class="token keyword">END</span> REPEAT <span class="token punctuation">[</span>别名<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h5 id="范例-3"><a href="#范例-3" class="headerlink" title="范例"></a>范例</h5><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">delimiter</span> <span class="token comment" spellcheck="true">//</span><span class="token keyword">create</span> <span class="token keyword">procedure</span> s_repeat<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">begin</span>    <span class="token keyword">declare</span> i <span class="token keyword">int</span> <span class="token keyword">default</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">declare</span> str <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">'1'</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true"># 开始repeat循环</span>    num:    repeat        <span class="token keyword">set</span> i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">set</span> str <span class="token operator">=</span> concat<span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token string">'-'</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true"># until 结束条件</span>    <span class="token comment" spellcheck="true"># end repeat 结束num 结束repeat循环</span>    until i <span class="token operator">>=</span> <span class="token number">10</span> <span class="token keyword">end</span> repeat num<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true"># 查询字符串拼接结果</span>    <span class="token keyword">select</span> str<span class="token punctuation">;</span><span class="token keyword">end</span> <span class="token comment" spellcheck="true">//</span><span class="token keyword">call</span> s_repeat<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h4><pre class="line-numbers language-sql"><code class="language-sql"><span class="token punctuation">[</span>别名<span class="token punctuation">]</span> <span class="token keyword">WHILE</span> 条件 <span class="token keyword">DO</span>    循环语句<span class="token keyword">END</span> <span class="token keyword">WHILE</span> <span class="token punctuation">[</span>别名<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="范例-4"><a href="#范例-4" class="headerlink" title="范例"></a>范例</h4><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">delimiter</span> <span class="token comment" spellcheck="true">//</span><span class="token keyword">create</span> <span class="token keyword">procedure</span> s_while<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">begin</span>    <span class="token keyword">declare</span> i <span class="token keyword">int</span> <span class="token keyword">default</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">declare</span> str <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">'1'</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true"># 开始while循环</span>    num:    <span class="token comment" spellcheck="true"># 指定while循环结束条件</span>    <span class="token keyword">while</span> i <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token keyword">do</span>        <span class="token keyword">set</span> i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">set</span> str <span class="token operator">=</span> concat<span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token string">'+'</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true"># while循环结束</span>    <span class="token keyword">end</span> <span class="token keyword">while</span> num<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true"># 查询while循环拼接字符串</span>    <span class="token keyword">select</span> str<span class="token punctuation">;</span><span class="token keyword">end</span> <span class="token comment" spellcheck="true">//</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="游标与handler"><a href="#游标与handler" class="headerlink" title="游标与handler"></a>游标与handler</h2><h4 id="游标"><a href="#游标" class="headerlink" title="游标"></a>游标</h4><p>游标是可以得到某一个结果集并逐行处理数据。游标的逐行操作，导致了游标很少被使用！</p><h4 id="游标语法"><a href="#游标语法" class="headerlink" title="游标语法"></a>游标语法</h4><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">DECLARE</span> 游标名 <span class="token keyword">CURSOR</span> <span class="token keyword">FOR</span> 查询语句<span class="token comment" spellcheck="true">-- 打开语法</span><span class="token keyword">OPEN</span> 游标名<span class="token comment" spellcheck="true">-- 取值语法 --只能取一行数据的值</span><span class="token keyword">FETCH</span> 游标名 <span class="token keyword">INTO</span> var_name <span class="token punctuation">[</span><span class="token punctuation">,</span> var_name<span class="token punctuation">]</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token comment" spellcheck="true">-- 关闭语法</span><span class="token keyword">CLOSE</span> 游标名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="handler句柄"><a href="#handler句柄" class="headerlink" title="handler句柄"></a>handler句柄</h4><p>handler句柄可以用来捕获异常</p><h4 id="handler句柄语法"><a href="#handler句柄语法" class="headerlink" title="handler句柄语法"></a>handler句柄语法</h4><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">DECLARE</span> <span class="token keyword">handler</span>操作 <span class="token keyword">HANDLER</span>    <span class="token keyword">FOR</span> 情况列表<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">(</span>比如：异常错误情况 如错误码<span class="token punctuation">)</span>    操作语句操作：<span class="token keyword">CONTINUE</span>： 继续    <span class="token keyword">EXIT</span>： 退出    UNDO： 撤销范例：<span class="token keyword">declare</span> <span class="token keyword">continue</span> <span class="token keyword">handler</span> <span class="token keyword">for</span> 异常<span class="token punctuation">(</span>错误码<span class="token punctuation">)</span> <span class="token keyword">set</span> flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token keyword">DECLARE</span> <span class="token keyword">exit</span> <span class="token keyword">HANDLER</span> <span class="token keyword">FOR</span> SQLSTATE <span class="token string">'3D000'</span> <span class="token keyword">set</span> flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token keyword">DECLARE</span> <span class="token keyword">continue</span> <span class="token keyword">HANDLER</span> <span class="token keyword">FOR</span> <span class="token number">1050</span> <span class="token keyword">set</span> flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token keyword">DECLARE</span> <span class="token keyword">continue</span> <span class="token keyword">HANDLER</span> <span class="token keyword">FOR</span> <span class="token operator">not</span> found <span class="token keyword">set</span> flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>异常情况：mysql_error_code        SQLSTATE <span class="token punctuation">[</span><span class="token keyword">VALUE</span><span class="token punctuation">]</span> sqlstate_value        condition_name        SQLWARNING        <span class="token operator">NOT</span> FOUND        SQLEXCEPTION<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意：</strong> MySQL中各种异常情况代码、错误码、别名和SQLSTATEM码可参考官方文档：</p><p><a href="https://dev.mysql.com/doc/refman/5.6/en/server-error-reference.html">https://dev.mysql.com/doc/refman/5.6/en/server-error-reference.html</a></p><h4 id="游标、句柄结合使用范例"><a href="#游标、句柄结合使用范例" class="headerlink" title="游标、句柄结合使用范例"></a>游标、句柄结合使用范例</h4><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">delimiter</span> <span class="token comment" spellcheck="true">//</span><span class="token keyword">create</span> <span class="token keyword">procedure</span> <span class="token number">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">begin</span>    <span class="token keyword">declare</span> val_id <span class="token keyword">int</span><span class="token punctuation">;</span>    <span class="token keyword">declare</span> val_name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">declare</span> val_salary <span class="token keyword">double</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true"># 声明flag标记</span>    <span class="token keyword">declare</span> flag <span class="token keyword">boolean</span> <span class="token keyword">default</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true"># 声明游标</span>    <span class="token keyword">declare</span> emp_flag <span class="token keyword">cursor</span> <span class="token keyword">for</span>    <span class="token keyword">select</span> id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> salary <span class="token keyword">from</span> employee<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true"># 使用handler句柄来解决结束循环问题</span>    <span class="token keyword">declare</span> <span class="token keyword">continue</span> <span class="token keyword">handler</span> <span class="token keyword">for</span> <span class="token number">1329</span> <span class="token keyword">set</span> flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true"># 打开</span>    <span class="token keyword">open</span> emp_flag<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true"># 使用循环取值</span>    <span class="token number">c</span>:loop        <span class="token keyword">fetch</span> emp_flag <span class="token keyword">into</span> val_id<span class="token punctuation">,</span> val_name<span class="token punctuation">,</span> val_salary<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true"># 如果标记为true则查询结果集</span>        <span class="token keyword">if</span> flag <span class="token keyword">then</span>            <span class="token keyword">select</span> val_id<span class="token punctuation">,</span> val_name<span class="token punctuation">,</span> val_salary<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true"># 如果标记为false则证明结果集查询完毕，停止死循环</span>        <span class="token keyword">else</span>            leave <span class="token number">c</span><span class="token punctuation">;</span>        <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>    <span class="token keyword">end</span> loop<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true"># 关闭</span>    <span class="token keyword">close</span> emp_flag<span class="token punctuation">;</span>    <span class="token keyword">select</span> val_id<span class="token punctuation">,</span> val_name<span class="token punctuation">,</span> val_salary<span class="token punctuation">;</span><span class="token keyword">end</span> <span class="token comment" spellcheck="true">//</span><span class="token keyword">call</span> <span class="token number">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python爬虫学习</title>
      <link href="2020/12/31/python-pa-chong-xue-xi/"/>
      <url>2020/12/31/python-pa-chong-xue-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="正则表达式符号与方法"><a href="#正则表达式符号与方法" class="headerlink" title="正则表达式符号与方法"></a>正则表达式符号与方法</h1><ul><li><h3 id="常用符号"><a href="#常用符号" class="headerlink" title="常用符号"></a>常用符号</h3></li></ul><pre class="line-numbers language-python"><code class="language-python"><span class="token punctuation">.</span> <span class="token operator">//</span>匹配任意字符 除了\n<span class="token operator">*</span> <span class="token operator">//</span>匹配前一个字符<span class="token number">0</span>次或者无限次? <span class="token operator">//</span>匹配前一个字符<span class="token number">0</span>次或<span class="token number">1</span>次<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token operator">//</span>贪心算法<span class="token punctuation">.</span><span class="token operator">*</span>? <span class="token operator">//</span>非贪心算法<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">//</span>括号内的数据作为结果返回<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><h3 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h3></li></ul><pre class="line-numbers language-python"><code class="language-python">findall <span class="token operator">//</span>匹配所有符合规律的内容<span class="token punctuation">,</span>返回包含结果的列表Search  <span class="token operator">//</span>匹配并提取第一个符合规律的内容，返回一个正则表达式对象Sub <span class="token operator">//</span>替换符合规律的内容，返回替换后的值<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3></li></ul><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> re<span class="token comment" spellcheck="true"># . 举例 就近1个</span><span class="token comment" spellcheck="true"># a = 'yxy123'</span><span class="token comment" spellcheck="true"># b = re.findall('x.',a) #['xy']</span><span class="token comment" spellcheck="true"># print(b)</span><span class="token comment" spellcheck="true"># c = re.findall('yx..',a) #['xy1']</span><span class="token comment" spellcheck="true"># print(c)</span><span class="token comment" spellcheck="true"># * 举例 就近0个或无限次</span><span class="token comment" spellcheck="true"># a = 'xyxaaxyy123'</span><span class="token comment" spellcheck="true"># b = re.findall('xy*',a) #['xy', 'x', 'xyy']</span><span class="token comment" spellcheck="true"># print(b)</span><span class="token comment" spellcheck="true"># ? 举例 就近0个或1次</span><span class="token comment" spellcheck="true"># a = 'xyxaaxyyyyxyy123'</span><span class="token comment" spellcheck="true"># b = re.findall('xy?',a) #['xy', 'x', 'xy']</span><span class="token comment" spellcheck="true"># print(b)</span><span class="token comment" spellcheck="true">#-------------------------------------------------------------------------#</span><span class="token comment" spellcheck="true"># str = 'hadskdxxIxxasdjasdxxlovexxasdausfhajdxxyouxxasdkajskd'</span><span class="token comment" spellcheck="true"># a = re.findall('xx.xx',str) #['xxIxx']</span><span class="token comment" spellcheck="true"># print(a)</span><span class="token comment" spellcheck="true"># b = re.findall('xx.*xx',str) #['xxIxxasdjasdxxlovexxasdausfhajdxxyouxx']</span><span class="token comment" spellcheck="true"># print(b)</span><span class="token comment" spellcheck="true"># c = re.findall('xx.*?xx',str) #['xxIxx', 'xxlovexx', 'xxyouxx']</span><span class="token comment" spellcheck="true"># print(c)</span><span class="token comment" spellcheck="true"># d = re.findall('xx(.*?)xx',str) #['I', 'love', 'you']</span><span class="token comment" spellcheck="true"># print(d)</span><span class="token comment" spellcheck="true">#-------------------------------------------------------------------------#</span><span class="token comment" spellcheck="true"># str = </span><span class="token triple-quoted-string string">'''aadasxxhello# xxasdasdxxworldxxasdas'''</span><span class="token comment" spellcheck="true"># e = re.findall('xx.*?xx',str) #['xxasdasdxx']  这里说明 .* -->> ........</span><span class="token comment" spellcheck="true"># print(e)</span><span class="token comment" spellcheck="true"># f = re.findall('xx.*?xx',str,re.S) # re.S使 匹配新的一行</span><span class="token comment" spellcheck="true"># print(f)</span><span class="token comment" spellcheck="true"># g = re.findall('xx(.*?)\n?xx',str,re.S) #['hello', 'world']</span><span class="token comment" spellcheck="true"># print(g)</span><span class="token comment" spellcheck="true">#-------------------------------------------------------------------------#</span><span class="token comment" spellcheck="true"># sub 举例</span>s <span class="token operator">=</span> <span class="token string">'12awad123asdansjd123455324'</span>out_S <span class="token operator">=</span> re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span><span class="token string">'123(.*?)123'</span><span class="token punctuation">,</span><span class="token string">'123%s123'</span><span class="token operator">%</span><span class="token string">'good'</span><span class="token punctuation">,</span>s<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#12awad123good123455324</span><span class="token keyword">print</span><span class="token punctuation">(</span>out_S<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Request-介绍与安装"><a href="#Request-介绍与安装" class="headerlink" title="Request 介绍与安装"></a>Request 介绍与安装</h1><p>pip install requests</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> requestshtml <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'https://juejin.cn/'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>html<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Xpath介绍与安装"><a href="#Xpath介绍与安装" class="headerlink" title="Xpath介绍与安装"></a>Xpath介绍与安装</h1><p>pip install lxml</p><pre><code></code></pre>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 兴趣学习 </tag>
            
            <tag> 正则表达式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue学习</title>
      <link href="2020/12/31/vue-xue-xi/"/>
      <url>2020/12/31/vue-xue-xi/</url>
      
        <content type="html"><![CDATA[<h2 id="缩写"><a href="#缩写" class="headerlink" title="缩写"></a>缩写</h2><p>v-bind —&gt; :    绑定值</p><p>v-on —&gt; @   监听事件</p><h2 id="条件渲染"><a href="#条件渲染" class="headerlink" title="条件渲染"></a>条件渲染</h2><p>v-if 与 v-show  区别：</p><p>​    后者改变display 属性</p><p>​    后者适用于反复频繁切换</p><h2 id="列表渲染"><a href="#列表渲染" class="headerlink" title="列表渲染"></a>列表渲染</h2><p>循环数组</p><p><img src="https://gitee.com/lmon/picbed/raw/master/2021IMG/20201231204951.png" alt="image-20201221212948333"></p><p>循环对象</p><p><img src="https://gitee.com/lmon/picbed/raw/master/2021IMG/20201231205416.png" alt="image-20201221213021755"></p><p>条件+循环</p><p><img src="https://gitee.com/lmon/picbed/raw/master/2021IMG/20201231205413.png" alt="image-20201221213059897"></p><h2 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h2><p>只有当计算变量发生变化才会执行</p><h2 id="class"><a href="#class" class="headerlink" title="class"></a>class</h2><p>1通过对象</p><p>2直接放置数组</p><p>3放置字符串</p><p>4对象数组混合</p><p><img src="https://gitee.com/lmon/picbed/raw/master/2021IMG/20201231210048.png" alt="`image-20201225212330296`"></p><h2 id="表单绑定"><a href="#表单绑定" class="headerlink" title="表单绑定"></a>表单绑定</h2><p>v-model</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>demo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../node_modules/vue/dist/vue.js<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- v-model 表单数据双向绑定 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>输入文本框<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>msg<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>msg<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token entity" title="&#123;">&amp;#123;</span><span class="token entity" title="&#123;">&amp;#123;</span>msg<span class="token entity" title="&#125;">&amp;#125;</span><span class="token entity" title="&#125;">&amp;#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>复选框<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- &lt;span> 标签被用来组合文档中的行内元素。 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item in fruits<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cfruits<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>selectFruits<span class="token punctuation">"</span></span> <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token entity" title="&#123;">&amp;#123;</span><span class="token entity" title="&#123;">&amp;#123;</span>item<span class="token entity" title="&#125;">&amp;#125;</span><span class="token entity" title="&#125;">&amp;#125;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token entity" title="&#123;">&amp;#123;</span><span class="token entity" title="&#123;">&amp;#123;</span>selectFruits<span class="token entity" title="&#125;">&amp;#125;</span><span class="token entity" title="&#125;">&amp;#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>单选框<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item in fruits<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>rfruits<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>selectFruit<span class="token punctuation">"</span></span> <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token entity" title="&#123;">&amp;#123;</span><span class="token entity" title="&#123;">&amp;#123;</span>item<span class="token entity" title="&#125;">&amp;#125;</span><span class="token entity" title="&#125;">&amp;#125;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token entity" title="&#123;">&amp;#123;</span><span class="token entity" title="&#123;">&amp;#123;</span>selectFruit<span class="token entity" title="&#125;">&amp;#125;</span><span class="token entity" title="&#125;">&amp;#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>选项框<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fruits<span class="token punctuation">"</span></span>  <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>chooseFruits<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item,key in fruits<span class="token punctuation">"</span></span> <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token entity" title="&#123;">&amp;#123;</span><span class="token entity" title="&#123;">&amp;#123;</span>item<span class="token entity" title="&#125;">&amp;#125;</span><span class="token entity" title="&#125;">&amp;#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token entity" title="&#123;">&amp;#123;</span><span class="token entity" title="&#123;">&amp;#123;</span>chooseFruits<span class="token entity" title="&#125;">&amp;#125;</span><span class="token entity" title="&#125;">&amp;#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">// console.log(Vue)</span>        <span class="token keyword">let</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            el<span class="token punctuation">:</span> <span class="token string">"#app"</span><span class="token punctuation">,</span>            data<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                msg<span class="token punctuation">:</span> <span class="token string">"hello vue"</span><span class="token punctuation">,</span>                fruits<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">"苹果"</span><span class="token punctuation">,</span><span class="token string">"香蕉"</span><span class="token punctuation">,</span><span class="token string">"橘子"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                selectFruits<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                selectFruit<span class="token punctuation">:</span><span class="token string">''</span><span class="token punctuation">,</span>                chooseFruits<span class="token punctuation">:</span><span class="token string">""</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>            <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'are you ok'</span><span class="token punctuation">)</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>chooseFruits <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>fruits<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h2><h6 id="组件之间传值："><a href="#组件之间传值：" class="headerlink" title="组件之间传值："></a>组件之间传值：</h6><p>​        1.可以通过事件传递</p><p>​        2.也可以传方法给子组件</p><p>​        3.子组件 通过 this.$parent  this.$root 可以找到父组件</p><p>​        4.父组件 通过  this.children 可以找到子组件</p><h6 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h6><p>​        为了降低耦合，建议通过传值方式（但如果为了取值，不进行修改 个人感觉还是可以这样用的）</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>demo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../node_modules/vue/dist/vue.js<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- 循环 绑定key 解除警告--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>product-com</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>item,key in proList<span class="token punctuation">'</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>key<span class="token punctuation">'</span></span> <span class="token attr-name">:product</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>product-com</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- 事件触发传值 --></span>            <span class="token comment" spellcheck="true">&lt;!-- 也可以传方法给子组件 props要加入--></span>            <span class="token comment" spellcheck="true">&lt;!-- 通过  this.$parent  可以找到父组件 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>school</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>item,key in school<span class="token punctuation">'</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>key<span class="token punctuation">'</span></span> <span class="token attr-name">:schoolname</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>item.schoolName<span class="token punctuation">'</span></span> <span class="token attr-name">@choose-school</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>changeEvent(item.schoolName)<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>school</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>你选择的学校是:<span class="token entity" title="&#123;">&amp;#123;</span><span class="token entity" title="&#123;">&amp;#123;</span>schoolName<span class="token entity" title="&#125;">&amp;#125;</span><span class="token entity" title="&#125;">&amp;#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">//组件练习1</span>        Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">"product-com"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            props<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"product"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            template<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`&lt;li>                        &lt;h2>产品名称:&amp;#123;&amp;#123;product.title&amp;#125;&amp;#125;&lt;/h2>                        &lt;h3>产品价格:&amp;#123;&amp;#123;product.price&amp;#125;&amp;#125;&lt;/h3>                        &lt;p>产品描述:&amp;#123;&amp;#123;product.brief&amp;#125;&amp;#125;&lt;/p>                    &lt;/li>`</span></span><span class="token punctuation">,</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">//组件练习2</span>        Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">"school"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            props<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"schoolname"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 传属性值</span>            template<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`&lt;li>                        &lt;h2>学校名称:&amp;#123;&amp;#123;schoolname&amp;#125;&amp;#125;&lt;/h2>                        &lt;button @click='selectSchool(schoolname)'>选择学校&lt;/button>                    &lt;/li>`</span></span><span class="token punctuation">,</span>            methods<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                selectSchool<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>schoolName<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>schoolName<span class="token punctuation">)</span>                    <span class="token comment" spellcheck="true">//想要把子元素数据传递给父元素 需要自定事件</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">'choose-school'</span><span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            el<span class="token punctuation">:</span> <span class="token string">"#app"</span><span class="token punctuation">,</span>            data<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                proList<span class="token punctuation">:</span> <span class="token punctuation">[</span>                    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                        title<span class="token punctuation">:</span> <span class="token string">'产品1'</span><span class="token punctuation">,</span>                        price<span class="token punctuation">:</span> <span class="token string">'10'</span><span class="token punctuation">,</span>                        brief<span class="token punctuation">:</span> <span class="token string">'产品描述1'</span>                    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                        title<span class="token punctuation">:</span> <span class="token string">'产品2'</span><span class="token punctuation">,</span>                        price<span class="token punctuation">:</span> <span class="token string">'11'</span><span class="token punctuation">,</span>                        brief<span class="token punctuation">:</span> <span class="token string">'产品描述2'</span>                    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                        title<span class="token punctuation">:</span> <span class="token string">'产品3'</span><span class="token punctuation">,</span>                        price<span class="token punctuation">:</span> <span class="token string">'12'</span><span class="token punctuation">,</span>                        brief<span class="token punctuation">:</span> <span class="token string">'产品描述3'</span>                    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>                <span class="token punctuation">]</span><span class="token punctuation">,</span>                school<span class="token punctuation">:</span> <span class="token punctuation">[</span>                    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                        schoolName<span class="token punctuation">:</span> <span class="token string">"清华大学"</span>                    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                        schoolName<span class="token punctuation">:</span> <span class="token string">"北京大学"</span>                    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                        schoolName<span class="token punctuation">:</span> <span class="token string">"浙江大学"</span>                    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                <span class="token punctuation">]</span><span class="token punctuation">,</span>                schoolName<span class="token punctuation">:</span> <span class="token string">''</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>            methods<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                changeEvent<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"事件-->"</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>schoolName <span class="token operator">=</span> data                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="脚手架-Vue-CLI"><a href="#脚手架-Vue-CLI" class="headerlink" title="脚手架 Vue CLI"></a>脚手架 Vue CLI</h2><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><pre class="line-numbers language-sh"><code class="language-sh">npm install -g @vue/cli# ORyarn global add @vue/cli<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="升级"><a href="#升级" class="headerlink" title="升级"></a>升级</h4><pre class="line-numbers language-sh"><code class="language-sh">npm update -g @vue/cli# 或者yarn global upgrade --latest @vue/cli<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h4><pre class="line-numbers language-sh"><code class="language-sh">vue create projectName# 图形化界面vue ui<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 兴趣学习 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
